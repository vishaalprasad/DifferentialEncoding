function [cargs, sz] = common_args(varargin)

  % Add absolute path to code
  if (exist('de_GetBaseDir')~=2)
    addpath(genpath(fullfile('..','..', 'code')));
    addpath(genpath(fullfile('..','..','..', 'code')));
    addpath(genpath(fullfile(de_GetBaseDir(),'code')));
    rmpath (genpath(fullfile('..','..','..', 'code')));
    rmpath (genpath(fullfile('..','..', 'code')));
  end;
  
  sz = [68 50]; 

  cargs = {  'parallel', false, ...
             ...
             'distn',   {'norme'},  'mu',          0,    'sigma',      [ 5 10 ], ...
             'nHidden', 3400*2,     'hpl',         2,    'nConns',     6, ...
             ...% Input
             'ac.randState', 4, ...
             'ac.tol',       0/403, ... %tolerance for disconnected pixels
             ... % Training
             'ac.XferFn',   6,            'ac.useBias',  1, ...
             'ac.AvgError', 1E-3,        'ac.MaxIterations', 101, ...
             'ac.TrainMode','resilient',  'ac.Pow', 3, ... %gradient power (usually 1)
             'ac.EtaInit',  5E-3,         'ac.Acc', 5E-7, 'ac.Dec', 0.15, ... %tanh#2, bias=1 resilient
             'ac.lambda',   0.025, ...%[0.02 0.01],  ...% regularization
             'ac.wmax',     0.75, ...
             'ac.linout',   true, ...
             ... %rejections
             'ac.rej.props', {'err'},   'p.rej.props', {'err'}, ...
             'ac.rej.type',  {'max'},   'p.rej.type',  {'sample_std-normd'}, ...
             'ac.rej.width', [nan],     'p.rej.width', [3] ...
             ... %output
             'out.data', {'info','mat'}, ...
             'out.plots', {'png'}  ...
             ...
             varargin{:}
           };
