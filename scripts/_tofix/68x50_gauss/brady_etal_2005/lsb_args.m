function [args] = lsb_args(varargin)
%
%  Final shared settings for left-side-bias runs
  addpath(genpath('../../../code'));

  args = de_ArgsInit ( ... %Network structure
         {   'runs',    40,          'ac.randState', 2,    'p.randState', 2, ...
             'distn',   {'norme'},    'mu',          0,    'sigma',       [ 10 20 ], ...
             'nHidden', 1134,        'hpl',          1,    'nConns',      20, ...
             ...% Input
             'ac.tol',    0*68*50, ... %tolerance for disconnected pixels
             ... % Training
             'ac.XferFn',   6,            'ac.useBias',  1, ...
             'ac.AvgError', 5E-5,         'ac.MaxIterations', 100, ...
             'ac.TrainMode','resilient',  'ac.Pow', 3, ... %gradient power (usually 1)
             'ac.EtaInit',  1E-4,         'ac.Acc', 5E-7, 'ac.Dec', 0.25, ... %tanh#2, bias=1 resilient
             'ac.lambda',   0.01,         ...% regularization
             ...
             'p.XferFn', 4,               'p.useBias', 1, ...
                                          'p.nHidden', 25, ...
             'p.AvgError',  0,            'p.MaxIterations', 5000, ...
             'p.TrainMode','batch',       'p.Pow', 1, ... %gradient power (usually 1)
            'p.EtaInit',   1E-3,          'p.Acc', 1.001,  'p.Dec', 1.25 ... %tanh#2,bias=1
             'p.lambda',   0.0001,         ...% regularization
             ... %rejections
             'ac.rej.props', {'err'},   'p.rej.props', {'err'}, ...
             'ac.rej.type',  {'max'},   'p.rej.type',  {'sample_std-normd'}, ...
             'ac.rej.width', [nan],     'p.rej.width', [3] ...
             'ac.debug', 1:10, ... %output
             'out.data', {'info','mat'}, ...
             'out.plots', {'png'},  ...
             'plots', {'ffts'}, ...
             'stats', {'ffts'}, ...
         }, varargin{:} ); 
